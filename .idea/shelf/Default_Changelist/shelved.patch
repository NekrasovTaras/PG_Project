Index: new_git.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import os\r\nimport pygame\r\nimport sys\r\n\r\npygame.init()\r\nsize = width, height = 1280, 720\r\nscreen = pygame.display.set_mode(size)\r\npygame.display.set_caption('Epic adventure')\r\n\r\n\r\ndef load_image(name, color_key=None):\r\n    fullname = os.path.join('data', name)\r\n    if not os.path.isfile(fullname):\r\n        print('Файла не существует', fullname)\r\n        sys.exit()\r\n    image = pygame.image.load(fullname)\r\n    if color_key is not None:\r\n        if color_key == -1:\r\n            color_key = image.get_at((0, 0))\r\n        image.set_colorkey(color_key)\r\n    else:\r\n        image = image.convert_alpha()\r\n    return image\r\n\r\n\r\nclass Player(pygame.sprite.Sprite):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.hero_image = load_image('image_part_022.png')\r\n        self.hero_images_walk = [load_image('image_part_001.png'), load_image('image_part_002.png'),\r\n                                 load_image('image_part_003.png'), load_image('image_part_004.png'),\r\n                                 load_image('image_part_005.png'), load_image('image_part_006.png'),\r\n                                 load_image('image_part_007.png'), load_image('image_part_008.png'),\r\n                                 load_image('image_part_009.png'), load_image('image_part_010.png'),\r\n                                 load_image('image_part_011.png'), load_image('image_part_012.png'),\r\n                                 load_image('image_part_013.png'), load_image('image_part_014.png'),\r\n                                 load_image('image_part_015.png'), load_image('image_part_016.png'),\r\n                                 load_image('image_part_017.png'), load_image('image_part_018.png'),\r\n                                 load_image('image_part_019.png'), load_image('image_part_020.png'),\r\n                                 load_image('image_part_021.png'), load_image('image_part_023.png'),\r\n                                 load_image('image_part_024.png'), load_image('image_part_025.png'),\r\n                                 load_image('image_part_026.png'), load_image('image_part_027.png')]\r\n\r\n        self.walk_right = False\r\n        self.walk_left = False\r\n        self.jump = False\r\n        self.jump_size = 8\r\n        self.fall_size = 1\r\n\r\n        self.hero = pygame.sprite.Sprite()\r\n        self.hero.image = self.hero_image\r\n        self.hero.rect = self.hero.image.get_rect()\r\n        self.hero.rect.left = 0\r\n        self.hero.rect.bottom = 720\r\n        self.hod_count = 0\r\n        self.hero_speed = 5\r\n        all_sprites.add(self.hero)\r\n\r\n    def walk_left_fu(self):\r\n        self.walk_right = False\r\n        self.walk_left = True\r\n\r\n    def walk_right_fu(self):\r\n        self.walk_right = True\r\n        self.walk_left = False\r\n\r\n    def stop_walk_left_fu(self):\r\n        self.walk_left = False\r\n\r\n    def stop_walk_right_fu(self):\r\n        self.walk_right = False\r\n\r\n    def jump_fu(self):\r\n        self.jump = True\r\n\r\n    def update(self):\r\n        if not self.walk_right and not self.walk_left:\r\n            self.hero.image = self.hero_image\r\n\r\n        elif self.walk_left and self.hero.rect.left > 0:\r\n            self.hero.rect.left -= self.hero_speed\r\n            self.hero.image = pygame.transform.flip(self.hero_images_walk[self.hod_count], True, False)\r\n            self.hod_count = (self.hod_count + 1) % 26\r\n\r\n        elif self.walk_right and self.hero.rect.right < 1280:\r\n            self.hero.rect.left += self.hero_speed\r\n            self.hero.image = self.hero_images_walk[self.hod_count]\r\n            self.hod_count = (self.hod_count + 1) % 26\r\n\r\n        if self.jump and self.fall_size == 1:\r\n            if self.jump_size >= -8:\r\n                self.hero.rect.bottom -= self.jump_size * abs(self.jump_size)\r\n                self.jump_size -= 1\r\n            else:\r\n                self.jump_size = 8\r\n                self.jump = False\r\n\r\n        collides = pygame.sprite.spritecollide(self.hero, level_1.platforms, False, pygame.sprite.collide_mask)\r\n        for plat in collides:\r\n            if self.hero.rect.bottom > plat.rect.top:\r\n                self.hero.rect.bottom = plat.rect.top + 1\r\n\r\n        if not collides and self.hero.rect.bottom < 720 and not self.jump:\r\n            self.hero.rect.bottom += self.fall_size\r\n            self.fall_size += 1\r\n        else:\r\n            self.fall_size = 1\r\n\r\n\r\nclass Platform(pygame.sprite.Sprite):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.image = load_image('platform_fly.png')\r\n        self.rect = self.image.get_rect()\r\n        self.mask = pygame.mask.from_surface(self.image)\r\n\r\n\r\nclass Enemy(pygame.sprite.Sprite):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.enemy_images_walk = [load_image('image_part_001.png'), load_image('image_part_002.png'),\r\n                                  load_image('image_part_003.png'), load_image('image_part_004.png'),\r\n                                  load_image('image_part_005.png'), load_image('image_part_006.png'),\r\n                                  load_image('image_part_007.png'), load_image('image_part_008.png'),\r\n                                  load_image('image_part_009.png'), load_image('image_part_010.png'),\r\n                                  load_image('image_part_011.png'), load_image('image_part_012.png'),\r\n                                  load_image('image_part_013.png'), load_image('image_part_014.png'),\r\n                                  load_image('image_part_015.png'), load_image('image_part_016.png'),\r\n                                  load_image('image_part_017.png'), load_image('image_part_018.png'),\r\n                                  load_image('image_part_019.png'), load_image('image_part_020.png'),\r\n                                  load_image('image_part_021.png'), load_image('image_part_023.png'),\r\n                                  load_image('image_part_024.png'), load_image('image_part_025.png'),\r\n                                  load_image('image_part_026.png'), load_image('image_part_027.png')]\r\n\r\n        self.walk_right_e = False\r\n        self.walk_left_e = False\r\n        self.fall_size_e = 1\r\n\r\n        self.image = self.enemy_images_walk[20]\r\n        self.rect = self.image.get_rect()\r\n        self.enemy_hod_count = 20\r\n        self.enemy_speed = 2\r\n\r\n    def update_e(self):\r\n        self.image = self.enemy_images_walk[int(self.enemy_hod_count // 1)]\r\n        self.enemy_hod_count = (self.enemy_hod_count + 0.2) % 26\r\n\r\n\r\nclass Level_1(pygame.sprite.Sprite):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.platforms = pygame.sprite.Group()\r\n        self.enemies = pygame.sprite.Group()\r\n        enemies_on_level = [[600, 80], [900, 400]]\r\n        layers_on_level = [[500, 100], [200, 400]]\r\n        for platform in layers_on_level:\r\n            block = Platform()\r\n            block.rect.x = platform[0]\r\n            block.rect.y = platform[1]\r\n            self.platforms.add(block)\r\n        for enemy in enemies_on_level:\r\n            vrag = Enemy()\r\n            vrag.rect.x = enemy[0]\r\n            vrag.rect.y = enemy[1]\r\n            self.enemies.add(vrag)\r\n        all_sprites.add(self.platforms)\r\n        all_sprites.add(self.enemies)\r\n\r\n\r\nbackground_image = load_image('background.png')\r\nall_sprites = pygame.sprite.Group()\r\nlevel_1 = Level_1()\r\nHero = Player()\r\nFPS = 60\r\nclock = pygame.time.Clock()\r\n\r\nrunning = True\r\nwhile running:\r\n    for event in pygame.event.get():\r\n        if event.type == pygame.QUIT:\r\n            running = False\r\n        if event.type == pygame.KEYDOWN:\r\n            if pygame.key.get_pressed()[pygame.K_RIGHT]:\r\n                Hero.walk_right_fu()\r\n            if pygame.key.get_pressed()[pygame.K_LEFT]:\r\n                Hero.walk_left_fu()\r\n            if pygame.key.get_pressed()[pygame.K_SPACE]:\r\n                Hero.jump_fu()\r\n        if event.type == pygame.KEYUP:\r\n            if event.key == pygame.K_LEFT:\r\n                Hero.stop_walk_left_fu()\r\n            if event.key == pygame.K_RIGHT:\r\n                Hero.stop_walk_right_fu()\r\n    Hero.update()\r\n    for elem in level_1.enemies:\r\n        elem.update_e()\r\n    screen.blit(background_image, (0, 0))\r\n    all_sprites.draw(screen)\r\n    pygame.display.flip()\r\n    clock.tick(FPS)\r\n\r\npygame.quit()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/new_git.py b/new_git.py
--- a/new_git.py	(revision bdae1bcdee74104b70720b682122b57b48b44c49)
+++ b/new_git.py	(date 1641505683397)
@@ -3,7 +3,7 @@
 import sys
 
 pygame.init()
-size = width, height = 1280, 720
+size = width, height = 1280, 0
 screen = pygame.display.set_mode(size)
 pygame.display.set_caption('Epic adventure')
 
